import { BaseConfig, Config, DirectiveConfig, ExtComponentPublicInstance, ExtHTMLElement, ViewStatus } from "./types";
export declare const elLazyKeySetMap: Map<HTMLElement, Set<string>>;
export declare const lazyKeyVmSetMap: Map<string, Set<ExtComponentPublicInstance>>;
export declare const lazyKeyElSetMap: Map<string, Set<ExtHTMLElement>>;
export declare const baseConfig: BaseConfig;
export declare const config: Config;
export declare const directiveConfig: DirectiveConfig;
export declare const listener: (event?: Event | undefined, sorted?: boolean | undefined) => void;
export declare function inViewPort(el: HTMLElement): ViewStatus;
export declare function updateDirectiveEl(el: ExtHTMLElement, targetElSet?: Set<ExtHTMLElement>): void;
export declare function updateComponentVm(vm: ExtComponentPublicInstance, targetVmSet?: Set<ExtComponentPublicInstance>): void;
export declare function addComponentRecords(vm: ExtComponentPublicInstance): void;
export declare function addDirectiveRecords(el: ExtHTMLElement, lazyKey: string | undefined): void;
